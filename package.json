{
  "name": "Spectrum",
  "version": "0.1.0",
  "private": true,
  "devDependencies": {
    "babel-cli": "^6.24.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "cross-env": "^5.0.5",
    "flow-bin": "^0.54.1",
    "lint-staged": "^3.3.0",
    "micromatch": "^3.0.4",
    "newrelic": "^2.2.0",
    "nodemon": "^1.11.0",
    "prettier": "^1.0.0",
    "raw-loader": "^0.5.1",
    "react-scripts": "^1.0.0",
    "rimraf": "^2.6.1",
    "uuid": "^3.0.1",
    "write-file-webpack-plugin": "^4.1.0"
  },
  "dependencies": {
    "apollo-local-query": "^0.3.0",
    "apollo-upload-client": "^5.1.0",
    "apollo-upload-server": "^2.0.4",
    "axios": "^0.16.2",
    "babel-plugin-styled-components": "^1.1.7",
    "babel-plugin-syntax-dynamic-import": "^6.18.0",
    "babel-plugin-transform-flow-strip-types": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-preset-env": "^1.5.2",
    "backpack-core": "^0.4.1",
    "body-parser": "^1.17.1",
    "bull": "3.0.0-rc.8",
    "casual": "^1.5.12",
    "cookie-parser": "^1.4.3",
    "cors": "^2.8.3",
    "dataloader": "^1.3.0",
    "debug": "^2.6.8",
    "emoji-regex": "^6.1.1",
    "express": "^4.15.2",
    "express-session": "^1.15.2",
    "faker": "^4.1.0",
    "graphql-date": "^1.0.3",
    "graphql-log": "0.1.2",
    "graphql-server-express": "0.8.x",
    "graphql-subscriptions": "0.4.x",
    "graphql-tools": "^0.11.0",
    "highlight.js": "^9.10.0",
    "history": "^4.6.1",
    "imgix-core-js": "^1.0.6",
    "immutability-helper": "^2.2.0",
    "json-stringify-pretty-compact": "^1.0.4",
    "linkify-it": "^2.0.3",
    "localstorage-memory": "^1.0.2",
    "lodash": "^4.17.4",
    "lodash.intersection": "^4.4.0",
    "longjohn": "^0.2.12",
    "moment": "^2.18.1",
    "node-env-file": "^0.1.8",
    "node-localstorage": "^1.3.0",
    "optics-agent": "^1.1.2",
    "passport": "^0.3.2",
    "passport-facebook": "^2.1.1",
    "passport-github2": "^0.1.10",
    "passport-google-oauth2": "^0.1.6",
    "passport-twitter": "^1.0.4",
    "postmark": "^1.4.1",
    "pre-commit": "^1.2.2",
    "query-string": "^5.0.0",
    "raven": "^2.0.2",
    "raven-js": "^3.14.0",
    "react": "^15.4.1",
    "react-apollo": "^1.2.0",
    "react-app-rewire-styled-components": "^3.0.0",
    "react-app-rewired": "^1.0.5",
    "react-dom": "^15.4.1",
    "react-helmet": "5.x",
    "react-infinite-scroller-with-scroll-element": "^1.0.4",
    "react-modal": "^1.6.5",
    "react-redux": "^5.0.2",
    "react-remarkable": "^1.1.1",
    "react-router": "^4.0.0-beta.7",
    "react-router-dom": "^4.0.0-beta.7",
    "react-stripe-checkout": "^2.2.5",
    "react-textarea-autosize": "^4.0.5",
    "react-transition-group": "^2.2.0",
    "react-trend": "^1.2.4",
    "recompose": "^0.23.1",
    "redux": "^3.6.0",
    "redux-thunk": "^2.2.0",
    "rethinkdb-migrate": "^1.1.0",
    "rethinkdbdash": "^2.3.29",
    "s3-image-uploader": "^1.0.7",
    "serialize-javascript": "^1.4.0",
    "session-rethinkdb": "^2.0.0",
    "slate": "^0.20.1",
    "slate-markdown": "0.1.0",
    "slugg": "^1.1.0",
    "string-replace-to-array": "^1.0.3",
    "stripe": "^4.15.0",
    "striptags": "2.x",
    "styled-components": "2.1.2",
    "subscriptions-transport-ws": "^0.7.0",
    "web-push": "^3.2.2"
  },
  "scripts": {
    "start": "cross-env NODE_ENV=production node build-iris/main.js",
    "start:athena": "cross-env NODE_ENV=production node build-athena/main.js",
    "start:hermes": "cross-env NODE_ENV=production node build-hermes/main.js",
    "start:chronos": "cross-env NODE_ENV=production node build-chronos/main.js",
    "start:mercury": "cross-env NODE_ENV=production node build-mercury/main.js",
    "dev:client": "cross-env NODE_PATH=./ react-app-rewired start",
    "dev:iris": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=iris*,-iris:resolvers cross-env DIR=iris backpack",
    "dev:athena": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=athena* cross-env DIR=athena backpack",
    "dev:hermes": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=hermes* cross-env DIR=hermes backpack",
    "dev:chronos": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=chronos*,-chronos:resolvers cross-env DIR=chronos backpack",
    "dev:mercury": "cross-env NODE_PATH=./ cross-env NODE_ENV=development cross-env DEBUG=mercury*,-mercury:resolvers cross-env DIR=mercury backpack",
    "build": "npm run build:client && npm run build:iris",
    "prebuild:iris": "rimraf build-iris",
    "build:iris": "cross-env NODE_PATH=./ cross-env DIR=iris backpack build",
    "prebuild:athena": "rimraf build-athena",
    "build:athena": "cross-env NODE_PATH=./ cross-env DIR=athena backpack build",
    "postbuild:athena": "cp athena/package.json build-athena/package.json && cp now.json build-athena/now.json",
    "prebuild:hermes": "rimraf build-hermes",
    "build:hermes": "cross-env NODE_PATH=./ cross-env DIR=hermes backpack build",
    "postbuild:hermes": "cp hermes/package.json build-hermes/package.json && cp now.json build-hermes/now.json",
    "prebuild:chronos": "rimraf build-chronos",
    "build:chronos": "cross-env NODE_PATH=./ cross-env DIR=chronos backpack build",
    "postbuild:chronos": "cp chronos/package.json build-chronos/package.json && cp now.json build-chronos/now.json",
    "prebuild:mercury": "rimraf build-mercury",
    "build:mercury": "cross-env NODE_PATH=./ cross-env DIR=mercury backpack build",
    "postbuild:mercury": "cp mercury/package.json build-mercury/package.json && cp now.json build-mercury/now.json",
    "build:client": "cross-env NODE_PATH=./ react-app-rewired build",
    "pretest": "babel-node shared/testing/setup-db.js",
    "test": "cross-env NODE_PATH=./ react-app-rewired test",
    "posttest": "babel-node shared/testing/teardown-db.js",
    "test:ci": "cross-env CI=true npm run test",
    "db:migrate": "npm run rethinkdb:migrate -- up",
    "db:drop": "npm run rethinkdb:migrate -- down",
    "db:seed": "node iris/migrations/seed/index.js",
    "db:reset": "yarn run db:drop && yarn run db:migrate && yarn run db:seed",
    "rethinkdb:migrate": "rethinkdb-migrate -f ./iris/migrations/config.js",
    "eject": "react-scripts eject",
    "lint:staged": "lint-staged"
  },
  "lint-staged": {
    "*.js": [
      "prettier --write --single-quote --trailing-comma es5",
      "git add"
    ]
  },
  "pre-commit": "lint:staged"
}
