import React from 'react';
import styled from 'styled-components';
import { zIndex } from '../globals';

/* eslint no-eval: 0 */

export const InlineSvg = styled.svg`
  position: absolute;
  top: auto;
  right: 0;
  bottom: 0;
  left: 0;
  width: 100%;
  color: inherit;
  fill: currentColor;

  > g {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    top: auto;
  }
`;

export const SvgWrapper = styled.div`
  position: relative;
  flex: none;
  z-index: ${zIndex.base};
  height: 80px;
  width: 110%;
  bottom: -4px;
  left: -5%;
  right: -5%;
  display: ${props => (props.goop === 0 ? 'none' : 'inline-block')};
  color: ${props => eval(`props.theme.${props.color}`)};

  @media (max-width: 768px) {
    width: 150%;
    left: -25%;
    right: -25%;
  }
`;

class Goop extends React.Component {
  returnGoop() {
    switch (this.props.goop) {
      default:
      case 0:
        return null;
      case 1:
        return (
          <g>
            <path d="M1920,111.904l0,128.096l-1920,0l0,-132.536c390.745,104.115 1168.02,146.399 1763,34.536c60.63,-11.399 112.59,-21.405 157,-30.096Z" />
          </g>
        );
      case 2:
        return (
          <g>
            <path d="M1920,128.968l0,111.032l-1920,0l0,-73.337c23.928,-1.593 79.415,-0.702 234.999,-24.663c129.328,-19.917 303.543,0.636 504.699,24.367c344.472,40.638 767.952,90.597 1180.3,-37.399Z" />
          </g>
        );
      case 3:
        return (
          <g>
            <path d="M1920,146.147l0,93.853l-1920,0l0,-89.895c26.234,-5.318 64.377,-5.875 119.408,2.395c825.1,123.985 1117.85,60.175 1363.44,6.643c61.44,-13.391 119.93,-26.139 183.06,-35.143c112.96,-16.112 194.64,-1.799 254.09,22.147Z" />
          </g>
        );
      case 4:
        return (
          <g>
            <path d="M1920,114.18l0,125.82l-1920,0l0,-77.034c162.135,71.848 657.686,32.918 981,-3.466c153.47,-17.271 274.06,-4.814 386.68,6.819c144.96,14.973 276.71,28.581 448.34,-24.319c40.97,-12.627 75.26,-21.68 103.98,-27.82Z" />
          </g>
        );
      case 5:
        return (
          <g>
            <path d="M1920,170.408l0,69.59l-1920,0l0,-70.108c16.912,-0.457 41.496,5.326 78.75,14.089c34.06,8.012 78.712,18.516 137.771,29.019c97.689,17.373 151.251,-7.434 204.304,-32.005c40.085,-18.565 79.879,-36.995 138.196,-36.995c42.888,0 96.297,12.473 159.528,27.24c136.535,31.888 318.871,74.47 539.971,25.26c240.59,-53.548 479.8,-56.485 661.48,-26.09Z" />
            <path d="M567.439,130.592c-0.66,3.489 7.503,4.22 19.289,5.275c7.461,0.668 16.373,1.466 25.419,3.176c7.616,1.44 14.477,3.149 20.302,4.599c12.022,2.995 19.63,4.889 20.356,1.051c1.077,-5.698 -17.179,-15.46 -40.514,-19.871c-23.335,-4.411 -43.775,0.072 -44.852,5.77Z" />
          </g>
        );
      case 6:
        return (
          <g>
            <path d="M1920,144.532l0,95.468l-1920,0l0,-159.22c222.219,187.472 1261.2,132.893 1475.5,79.72c40.24,-9.985 69.77,-23.707 95.71,-35.766c59.8,-27.795 100.58,-46.751 209.79,9.266c57.95,29.726 99.34,21.492 139,10.532Z" />
            <path d="M1484.87,148.727c19.52,-5.408 38.86,-15.499 37.82,-19.224c-1.03,-3.726 -17.93,-3.985 -37.44,1.423c-19.52,5.408 -35.46,10.161 -33.24,18.161c2.22,8 16.3,4.228 32.86,-0.36Z" />
            <path d="M1549.19,121.713c0.34,1.34 -1.57,2.969 -4.24,3.639c-2.68,0.67 -5.13,0.127 -5.46,-1.212c-0.34,-1.34 1.56,-2.969 4.24,-3.639c2.68,-0.67 5.13,-0.127 5.46,1.212Z" />
          </g>
        );
      case 7:
        return (
          <g>
            <path d="M1920,157.624l0,82.231l-1920,0l0,-106.045c54.693,-9.327 93.005,2.91 138.922,17.574c73.295,23.409 165.968,53.007 375.578,10.971c247.003,-49.536 322.315,-30.031 436.083,-0.567c55.037,14.255 119.077,30.84 215.917,43.067c239.72,30.267 520.16,4.182 753.5,-47.231Z" />
            <path d="M191.237,130.283c-16.903,26.419 59.568,36.202 101.803,40.414c42.235,4.212 103.682,0.513 102.579,-5.295c-0.734,-3.867 -12.082,-4.621 -32.16,-5.956c-10.074,-0.669 -22.344,-1.485 -36.574,-2.913c-17.526,-1.759 -42.089,-8.868 -65.551,-15.658l-0.003,-0.001c-33.557,-9.712 -64.859,-18.772 -70.094,-10.591Z" />
          </g>
        );
    }
  }

  render() {
    return (
      <SvgWrapper
        className={'goop'}
        goopHeight={this.props.goopHeight}
        goop={this.props.goop}
        color={this.props.color}
      >
        <InlineSvg
          fillRule="evenodd"
          clipRule="evenodd"
          xmlns="http://www.w3.org/2000/svg"
          aria-labelledby="title"
          viewBox="0 0 1920 240"
          id={'goop'}
        >
          <title id="title">goop</title>
          {this.returnGoop()}
        </InlineSvg>
      </SvgWrapper>
    );
  }
}

Goop.defaultProps = {
  color: 'bg.default',
};

export default Goop;
